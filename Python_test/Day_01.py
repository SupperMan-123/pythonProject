# 这是一个示例 Python 脚本。
# 笔记
#
# ----------------------------------------------------
# Len 获取字符串长度
# print(len("人生苦短, 我学Python!"))
# ----------------------------------------------------
# 表达式 由数据和操作符构成
# a = '我是' + '学习' + '中文'
# print(a)
# ----------------------------------------------------
# 帮助功能
# 1-函数 使用格式：函数名（参数）,注意函数是已经封装好的一段具有特殊意义的代码，以便以后使用可以直接调用该函数
# print(dir(__builtins__)) #查看所有的函数
# print(help(abs))  # 查看单个函数用法
# 2-方法
# a = 3+4j
# print(a.real) # 使用方法
#
# print(dir(a)) # 查看 a 的所有方法
# print(help(a.imag)) # 查看 imag 方法使用说明
# 使用格式：对象名.方法（参数）,都是封装了独立功能的代码,必须通过具体的对象来使用该方法，表示针对这个对象要进行的操作
# 3-关键字 python中内置有33个关键字
# print(help('keywords')) #所有的关键字
# help("if")
# print(help('not')) #查看使用说明
# ----------------------------------------------------
#单行字符串与多行字符串
# print("123\n" "321\n" "222")
# ----------------------------------------------------
a = "Python is an Excellent Language"
# print(a.lower()) #返回字符串a的副本,全部字符都是小写的
# print(a.upper()) #返回字符串a的副本,全部字符都是大写的
# print(a.split('e')) #分割字符串
# print(a.count(a)) #统计 a 在字符串中出现的次数
# print(a.replace('e','p')) # 将字符串中的e 换成 p
print(a.center(50,'#')) # 将字符串居中 左右空白处填充 #
print(a)
# ----------------------------------------------------

# counts = 3
# while counts > 0:
# temp = input("请输入一个数字: ")
# guess = int(temp)
# if guess == 8:
# print("恭喜你答对了")
# break
# else:
# if guess < 8:
# print("小了")
# else:
# print("大了")
# counts = counts - 1
#
# print("GAME OVER")
# ----------------------------------------------------
# score = input("请输入你的分数")
# score = int(score)
#
# if 0 <= score < 60:
# print("D")
# if 60 <= score < 80:
# print("C")
# if 80 <= score < 90:
# print("B")
# if 90 <= score < 100:
# print("A")
# if score == 100:
# print("S")
# else:
# print("请输入0-100之前的分数")
# ----------------------------------------------------
# score = 66
# level = ('D' if 0 < score < 60 else
# 'C' if 60 < score < 80 else
# 'B' if 80 < score < 90 else
# 'A' if 90 < score < 100 else
# 'S' if score == 100 else
# "请输入 0-100 之间的分数")
# print(level)
# ----------------------------------------------------
# i = 1
# sum = 0
# while i < 1000000:
# sum = sum + 1
# i = i + 1
# print(sum)
# ----------------------------------------------------
# while True:
# answer = input("主人，我可以退出循环了吗？")
# if answer == "可以":
# break
# print("哎！好累~~~~")
# ----------------------------------------------------
# i = 0
# while i < 10:
# i = i + 1
# if i % 2 == 0: #i被2整除
# continue #条件判断为真的话 就回到开头继续执行循环 与 break 相反
# print(i)
# ----------------------------------------------------
# i = 1
# while i < 5:
# print("循环内,i的值是", i)
# if i == 4:
# break #满足条件的时候 就会跳出循环体 不会再执行 else 的语句
# i = i + 1
# else:
# print("循环外, i的值是", 1)
# ----------------------------------------------------
# day = 7
# while day <= 7:
# answer = input("今天有好好学习吗? ")
# if answer != "有":
# break
# day = day + 1
# else:
# print("你很棒,你已经坚持七天连续学习! ")
# ----------------------------------------------------
# i 是管外层循环 j 是管内层循环
# i = 1
# while i <= 9:
# j = 1
# while j <= i:
# print(j,"*",i, "=",j * i,end=" ")
# j = j + 1
# print()
# i = i + 1
# ----------------------------------------------------
# #for 循环
# for each in "Fishc":
#     print(each)
# ----------------------------------------------------
# range() 生产一个数字序列
# for i in range(5,10,2):
#     print(i)
# ----------------------------------------------------
# for n in range(2, 10):
#     for x in range(2, n):
#         if n % x == 0:
#             print(n, "=",x,"*",n // x)
#             break
#     else:
#         print(n,"是一个素数")
# ----------------------------------------------------
# 创建序列 相关的函数 len
# rhyme = [1,2,3,4,5, "上山打老虎"]
# for each in rhyme:
#     print(each)
# ----------------------------------------------------
# 列表的 增 删 改 查  切片[:]
# append 函数 每次只能添加一条数据
# extend 函数 添加多条数据(追加存储)
# insert 函数 插入任意位置数据 s.insert(1,2)
# remove 函数 删除数据
# pop 函数 删除任意位置数据pop(2)
# clear 删除所有数据clear()
# ----------------------------------------------------
# 排序
# sort() 从小到大
# reverse() 从大到小
# count() 查找 查找索引值举例: heros.count("绿巨人")
# copy 复制变量
# ----------------------------------------------------
# 列表的 加 减
# 嵌套列表 matrix = [[1,2],[3,4],[5,6]]
# 访问嵌套列表
# matrix = [[1,2],[3,4],[5,6]]
# for i in matrix:
#     for each in i:
#          print(each,end='')
#     print()
# #----------------------------------------------------
# 字符串 截取
# "     左侧不要留白".lstrip()
# "右侧不要留白     ".rstrip()
# " 左右都不要留白  ".strip()
# "www.baidu.com".removeprefix("www.")
# "www.baidu.com".removesuffix(".com")
# #拆分
# "www.baidu.com".partition(".")
# "www.baidu.com/cn".rpartition("/")
# "苟日新", "日日新", "又日新".split(",", 1)
# #拼接
# ".".join(["wwww", "baidu", "com"])
# "^".join(("F", "ISH", "C"))
# ----------------------------------------------------
# 格式化字符串
# "1+2={}, 2的平方是{}, 3的立方是{}".format(1+2, 2*2, 3*3*3)
# "{}看到{}就很激动".format("小甲鱼", "漂亮的小姐姐")
# "{1}看到{0}就很激动".format("小甲鱼", "漂亮的小姐姐")
# ----------------------------------------------------
# 列表 元组 字符串 互相转换
# list("Fishc") 将字符串转换成列表
# list((1,2,3,4,5)) 将元组转换成列表
# ----------------------------------------------------
# def morsecode1(code):
#
# c_table = {".-":"A", "-...":"B", "-.-.":"C", "-..":"D",
#                    ".":"E", "..-.":"F", "--.":"G", "....":"H",
#                    "..":"I", ".---":"J", "-.-":"K", ".-..":"L",
#                    "--":"M", "-.":"N", "---":"O", ".--.":"P",
#                    "--.-":"Q", ".-.":"R", "...":"S", "-":"T",
#                    "..-":"U", "...-":"V", ".--":"W", "-..-":"X",
#                    "-.--":"Y", "--..":"Z", ".----":"1", "..---":"2",
#                    "...--":"3", "....-":"4", ".....":"5", "-....":"6",
#                    "--...":"7", "---..":"8", "----.":"9", "-----":"0"}
# code = input("请输入莫斯密码: ")
# split_code = code.split(" ")
# result = [c_table[each] for each in split_code]
# print(result)
# ----------------------------------------------------
# 创建字典
# a = {"吕布": "口口布", "关羽": "关习习"}
# b = dict(吕布="口口布", 关羽="关习习")
# c = dict([("吕布", "口口布"), ("关羽", "关习习")])
# d = dict({"吕布": "口口布", "关羽": "关习习"})
# e = dict({"吕布": "口口布", "关羽": "关习习"}, 刘备="刘Baby")
# f = dict(zip(["吕布", "关羽", "刘备"], ["口口布", "关习习", "刘Baby"]))
# ----------------------------------------------------
# 集合 set
# 创建集合的方式
# {"FishC", "Python"}
# {s for s in "FishC"}
# set("FishC")
